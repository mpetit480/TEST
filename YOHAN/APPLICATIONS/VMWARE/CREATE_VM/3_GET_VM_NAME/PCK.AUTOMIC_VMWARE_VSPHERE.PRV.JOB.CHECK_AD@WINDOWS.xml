<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>21.0.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>A</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <ert>8</ert>
         <platform>WINDOWS</platform>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>PCK.AUTOMIC_VMWARE_VSPHERE.PRV.JOB.CHECK_AD@WINDOWS</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <description>Get list of VM</description>
         <versioning_id>-2040234438</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.EXECUTION_ENVIRONMENT

!-------------------------------------Logging input parameters-------------------------------------------------------------------------------------------------
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.PARAM_VALIDATION

: INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.LOGGING_CONNECTION_DETAILS

: SET &UC4RB_LOGGING_PARAMETER# = "Location"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_LOCATION#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.EXECUTION
:INC PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN

!DECRYPT PASSWORD
: INC PCK.ITPA_SHARED.PUB.INCLUDE.ATTACH
: SET &UC4RB_ENCRYPTED_PASSWORD_TMP# = "&UC4RB_VSP_PASSWORD#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.DECRYPT_PASSWORD


!------------------------------------Prepare PowerCLI commandlet-----------------------------------------------------------------------------------------------
! :SET &UC4RB_VSP_GET_VM_LIST_CMDLET# = "Get-ADComputer -filter &VM_NAME_NEW# -ErrorAction Stop"

! !Check Location
! :IF &UC4RB_VSP_LOCATION# <> ""
! :  INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_LOCATION#
! :  SET &UC4RB_VSP_GET_VM_LIST_CMDLET# = STR_CAT(&UC4RB_VSP_GET_VM_LIST_CMDLET#, "-Location '&UC4RB_VSP_VSPHERE_ESC_VALUE#' ")
! :ENDIF





!------------------------------------ Powershell script for the action -----------------------------------------------------------------------------------------

! :    SET &UC4RB_LOGGING_INFO# =  "CONNECT CMD: &UC4RB_VSP_CONNECT_CMDLET#"
! :    INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
!      $vsp_srv_obj = &UC4RB_VSP_CONNECT_CMDLET# -Password $UC4_DECRYPTED_PWD -Force
!      try {
! :          SET &UC4RB_LOGGING_INFO# = "GET VM LIST CMND: &UC4RB_VSP_GET_VM_LIST_CMDLET#"
! :          INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO


! &UC4RB_VSP_GET_VM_LIST_CMDLET#

! write-host Get-ADComputer -filter {name -eq "&VM_NAME_NEW#"} -SearchBase "DC=D20,DC=tes,DC=local" -Server "D20.tes.local"
! Get-ADComputer -filter {name -eq "&VM_NAME_NEW#"} -SearchBase "DC=D20,DC=tes,DC=local" -Server "D20.tes.local"

if (@(Get-ADComputer &VM_NAME_NEW# -ErrorAction SilentlyContinue).Count) {
        Write-Host "#########################"
        Write-Host "Error: Computer object exists"
        Write-Host "#########################"
      $errors=1
    }
    else {
        Write-Host "#########################"
        Write-Host "OK: Computer object NOT FOUND"
        Write-Host "#########################"
    }

!     $tempVar = Get-ADComputer -filter {name -eq "&VM_NAME_NEW#"} -SearchBase "DC=D20,DC=tes,DC=local" -Server "D20.tes.local"
!     if ($tempVar -like "Get-ADComputer : Cannot find an object with identity" ) {
!       Write-Host "#########################"
!       Write-Host "OK: Computer object NOT FOUND"
!       Write-Host "#########################"
!     }
!     else{
!        Write-Host "#########################"
!        Write-Host "Error: Computer object exists"
!        Write-Host "#########################"
!       $errors=1
!     }

! if (@(Get-ADComputer "&VM_NAME_NEW#" -ErrorAction SilentlyContinue).Count) {
!
!         Write-Host "#########################"
!         Write-Host "Computer object exists"
!         Write-Host "#########################"
!         $errors=1
!     }
!     else{
!         Write-Host "#########################"
!         Write-Host "Computer object NOT FOUND"
!         Write-Host "#########################"
!     }





!-----------------------------------Error Handling-------------------------------------------------------------------------------------
!Status messages
:SET &UC4RB_LOGGING_INFO# = "******** GET VM NAME LIST ACTION EXECUTED SUCCESSFULLY ********"
:SET &UC4RB_LOGGING_ERROR# = "******** GET VM NAME LIST ACTION FAILED ********"

:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.CHECK_ERRORSTATUS]]></process>
      </row>
      <row>
         <pre_process><![CDATA[:INC PCK.ITPA_SHARED.PUB.INCLUDE.START_STOP_JOB_ACCORDING_TO_AGENT_OS
:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.PREP_CONNECTION_CMDLETS
! :set &prev_id#=SYS_ACT_PREV_NR()
! :P &prev_id#
! :SET &VM_NAME_test# = GET_PUBLISHED_VALUE(&prev_id#,VM_NAME#)
! :P &VM_NAME_test#
! :SET &VM_NAME_NEW# = GET_PUBLISHED_VALUE(&prev_id#,VM_NAME_NEW#)
! :P &VM_NAME_NEW#
!
!:PUT_ATT HOST= "CTRLD2001"
:SET &VM_NAME_NEW#=GET_VAR("&VARA_NAME_TICKET#","VM_NAME_NEW#",1)
!:SET &VM_NAME_NEW#=GET_VAR("&VARA_NAME_TICKET#","VM_NAME_NEW#",1)
:P &VM_NAME_NEW#

]]></pre_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <platform>WINDOWS</platform>
         <agent><![CDATA[<WIN>]]></agent>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>2</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object></job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <output_filter_definitions>
      <row>
         <filter_name>FILTER.OUTPUT.GET_VM_NAME</filter_name>
         <line_number>1</line_number>
         <result>1</result>
         <message_insert>VM dispo</message_insert>
      </row>
   </output_filter_definitions>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>
