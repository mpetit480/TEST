<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>21.0.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>A</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <ert>12</ert>
         <platform>WINDOWS</platform>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>PCK.AUTOMIC_VMWARE_VSPHERE.PRV.JOB.CHECK_DISK@WINDOWS</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <description>Check disk</description>
         <versioning_id>-618364480</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[
:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.EXECUTION_ENVIRONMENT

! -------------------------------------Logging input parameters-------------------------------------------------------------------------------------------------
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.PARAM_VALIDATION
:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.LOGGING_CONNECTION_DETAILS

:SET &UC4RB_LOGGING_PARAMETER# = "Entity Name"
:SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_ENTITY#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:SET &UC4RB_LOGGING_PARAMETER# = "Get Stats Of"
:SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_STAT_VALUES#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:SET &UC4RB_LOGGING_PARAMETER# = "Max Samples"
:SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_MAX_SAMPLES#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:SET &UC4RB_LOGGING_PARAMETER# = "Realtime"
:SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_REALTIME#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:SET &UC4RB_LOGGING_PARAMETER# = "Start Date"
:SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_START_DATE#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:SET &UC4RB_LOGGING_PARAMETER# = "End Date"
:SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_END_DATE#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:SET &UC4RB_LOGGING_PARAMETER# = "Interval Mins"
:SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_INTERVAL_MINS#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:SET &UC4RB_LOGGING_PARAMETER# = "Interval Secs"
:SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_INTERVAL_SECS#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:SET &UC4RB_LOGGING_PARAMETER# = "Stat"
:SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_STAT#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:SET &UC4RB_LOGGING_PARAMETER# = "Instance"
:SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_INSTANCE#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.EXECUTION
:INC PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN

! ------------------------------------ Powershell script for the action --------------------------------------------------------------------------------
try
{
!  Connect to the server
:SET &UC4RB_LOGGING_INFO# = "CONNECT CMD: &UC4RB_VSP_CONNECT_CMDLET#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO

!  DECRYPT PASSWORD
:INC PCK.ITPA_SHARED.PUB.INCLUDE.ATTACH
:SET &UC4RB_ENCRYPTED_PASSWORD_TMP# = "&UC4RB_VSP_PASSWORD#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.DECRYPT_PASSWORD

!  Executing Connect to vCenter cmdlets
   $connect_obj = &UC4RB_VSP_CONNECT_CMDLET# -Password $UC4_DECRYPTED_PWD -Force
   try
   {
!    ------------------------------------Prepare PowerCLI commandlet-----------------------------------------------------------------------------------

:set &FLAG_CLUSTER#=str_find("&UC4RB_VSP_ENTITY#", "CLUSTER")
:P &FLAG_CLUSTER#
:if &FLAG_CLUSTER#=0
:  SET &GET_ENTITY_CMDLET# = "Get-Datastore"
     Write-host "######Disk Usage######"
     Write-host "&GET_ENTITY_CMDLET# -Name &UC4RB_VSP_ENTITY#"

!   function CalcPercent {
!       param(
!       [parameter(Mandatory = $true)]
!       [int]$InputNum1,
!       [parameter(Mandatory = $true)]
!       [int]$InputNum2)
!       $InputNum1 / $InputNum2*100
!   }

  $datastores = &GET_ENTITY_CMDLET# -Name &UC4RB_VSP_ENTITY#
!   ForEach ($ds in $datastores)
!   {
!       if (($ds.Name -match "Shared") -or ($ds.Name -match ""))
!       {
!           $PercentFree = CalcPercent $ds.FreeSpaceGB $ds.CapacityGB
!           $PercentFree = "{0:N2}" -f $PercentFree
!           $ds | Add-Member -type NoteProperty -name PercentFree -value $PercentFree

!       }
!   }
  $datastores | Select Name,FreeSpaceGB,CapacityGB

  $disk_free=$datastores.FreeSpaceGB
  if (($datastores.FreeSpaceGB * 0.9) -gt &ESPACE_DISQUE#) {
  Write-host "Free space is enough for new vm"

  }  Else {

  Write-host "Free space is not enough for new vm"
  Write-host "Workflow will be canceled"
  $errors = 1

}
:else
:  SET &GET_ENTITY_CMDLET# = "Get-DatastoreCluster"
     Write-host "######Disk Usage######"
     Write-host "&GET_ENTITY_CMDLET# -Name &UC4RB_VSP_ENTITY#"

  $datastores = Get-DatastoreCluster -Name &UC4RB_VSP_ENTITY# | Get-Datastore | Sort FreespaceGB -Descending | Select-Object -First 1
  $datastores | Select Name,FreeSpaceGB,CapacityGB
  if (($datastores.FreeSpaceGB * 0.9) -gt &ESPACE_DISQUE#) {
  Write-host "Free space is enough for new vm"
  Write-host "DataStore=$datastores"
  }  Else {

  Write-host "Free space is not enough for new vm"
  Write-host "Workflow will be canceled"
  $errors = 1

}

:endif

!    LOGGING GET-STAT CMDLETS

   }
   finally
   {
      try
      {
!        Disconnect from the server if connection is establish
:SET &UC4RB_LOGGING_INFO# = "DISCONNECT CMD: &UC4RB_VSP_DISCONT_CMDLET#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
         &UC4RB_VSP_DISCONT_CMDLET#
      }
      catch
      {
         Write-Host "Unable to disconnect from the server."
         Write-Host "INFO: $($error[0].Exception.Message)"
      }
   }
}
Catch [VMware.VimAutomation.Sdk.Types.V1.ErrorHandling.VimException.VimException] {
   Write-Host "ERROR: $($error[0].Exception.Message)"

   if("ResourceUnavailable" -ne $error[0].categoryinfo.category){
      $errors = 1
   }

}
catch
{
   $errors = 1
   Write-Host "ERROR: $($error[0].Exception.Message)"
}

! -----------------------------------Error Handling------------------------------------------------------------------------------------------------------------
! Status messages
:SET &UC4RB_LOGGING_INFO# = "******** CLUSTER CHECK EXECUTED SUCCESSFULLY ********"
:SET &UC4RB_LOGGING_ERROR# = "******** CLUSTER CHECK ACTION FAILED ********"

:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.CHECK_ERRORSTATUS]]></process>
      </row>
      <row>
         <pre_process><![CDATA[:INC PCK.ITPA_SHARED.PUB.INCLUDE.START_STOP_JOB_ACCORDING_TO_AGENT_OS
:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.PREP_CONNECTION_CMDLETS

]]></pre_process>
      </row>
      <row>
         <post_process><![CDATA[! Publish the Datasotre name

:SET &STATUS# = GET_UC_OBJECT_STATUS(, , "RETCODE")
:IF &STATUS# EQ 0
:  SET &HND# = PREP_PROCESS_REPORT("JOBS", , "REP", , "COL=DELIMITER", 'DELIMITER=*DataStore=*')
:  PROCESS &HND#
:    SET &BEST_DATASOTRE_IN_CLUSTER# = GET_PROCESS_LINE(&HND#, 2)
:    IF &BEST_DATASOTRE_IN_CLUSTER#<>""
:      P &BEST_DATASOTRE_IN_CLUSTER#
:      PUBLISH &BEST_DATASOTRE_IN_CLUSTER#, , "TOP"
:      PUT_VAR_COL &VARA_NAME_TICKET#, "BEST_DATASOTRE_IN_CLUSTER#", 1, "&BEST_DATASOTRE_IN_CLUSTER#"
:    endif
:  ENDPROCESS
:  CLOSE_PROCESS &HND#
:ENDIF




]]></post_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <platform>WINDOWS</platform>
         <agent><![CDATA[<WIN>]]></agent>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>2</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object></job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>
