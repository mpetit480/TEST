<?xml version="1.0" encoding="UTF-8"?>
<jobi>
   <metadata>
      <row>
         <version>21.0.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <child_flags>00000000000000000000000000000000</child_flags>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <name>PCK.AUTOMIC_CLOUDFOUNDRY.PUB.INCLUDE.CHECK_JOBSTATUS</name>
         <type>JOBI</type>
         <description>Check the job status and logging</description>
         <versioning_id>1484309217</versioning_id>
      </row>
   </general_attributes>
   <documentation>
      <row>
         <Docu><![CDATA[It calculates and publish the job status based on some known parameters. It considers the following things into account.
* Any OS command failed or not. (E.g. ERRORLEVEL OS variable)
* Job explicitly sets error code into known variable.  
* AE Script processing error. (E.g. Validation errors)
It considers any non zero value as error scenario.
Further based on job status, it logs the success or failure message into Job report.

This include can be only used in Job's Process tab.
It can be used for both Windows and Unix environment.
]]></Docu>
      </row>
   </documentation>
   <scripts>
      <row>
         <process><![CDATA[:SWITCH &$PLATFORM#
:CASE "WINDOWS"
IF %ERRORLEVEL% NEQ 0 (
  SET ERRORS=%ERRORLEVEL%
) ELSE IF %ERRORS% EQU 0 (
  SET ERRORS=&UC4RB_CF_RETCODE#
)
IF %ERRORS% EQU 0 (
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
) ELSE (
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.ERROR
)
@set retcode=%ERRORS%
@if NOT %ERRORS% == 0 goto :retcode

:CASE "UNIX"
execcode=$?
if [ "$execcode" -ne "0" ]
then
    errors=$execcode
elif [ $errors -eq 0 ]
then
    errors=&UC4RB_CF_RETCODE#
fi
if [ $errors -eq 0 ]
then
:  INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
else
:  INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.ERROR
fi
if [ "$errors" -ne "0" ]
then
    exit $errors
fi
:OTHER
:ENDSWITCH]]></process>
      </row>
   </scripts>
</jobi>
