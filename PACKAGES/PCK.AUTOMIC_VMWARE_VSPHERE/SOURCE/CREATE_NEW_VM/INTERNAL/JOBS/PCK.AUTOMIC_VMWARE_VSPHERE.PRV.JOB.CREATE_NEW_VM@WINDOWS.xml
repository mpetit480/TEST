<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>21.0.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>A</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <platform>WINDOWS</platform>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>PCK.AUTOMIC_VMWARE_VSPHERE.PRV.JOB.CREATE_NEW_VM@WINDOWS</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <description>Create new Virtual Machine</description>
         <versioning_id>1826876804</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.EXECUTION_ENVIRONMENT

!-------------------------------------Logging input parameters-------------------------------------------------------------------------------------------------
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.PARAM_VALIDATION
: INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.LOGGING_CONNECTION_DETAILS

: SET &UC4RB_LOGGING_PARAMETER# = "Virtual Machine name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_VMNAME#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Guest OS ID"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_GUESTOS_ID#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Datacenter name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_DATACENTER#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Target Place"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_TRGT_PLACE#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Target Place name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_PLACE#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Host name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_VMHOST#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Datastore name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_DATASTORE#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Destination Folder path"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_DEST_FOLDER#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Network name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_NETWORK#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Memory size in GB"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_VM_MEMORY#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Disk size in GB"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_VM_DISKS#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Number of CPUs"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_VM_CPU_NO#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.EXECUTION
:INC PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN

!------------------------------------  Validation of Parameters -----------------------------------------------------------------------------------------------

! Initialize the AE variable for error check
: SET &CHECK# = 0

:IF &UC4RB_VSP_TRGT_PLACE# NE "NONE"
:  IF &UC4RB_VSP_PLACE# <> ""
:        SET &CHECK# = &CHECK# +1
:  ENDIF
:ENDIF

:IF &UC4RB_VSP_VMHOST# <> ""
:        SET &CHECK# = &CHECK# +1
:ENDIF

:IF &CHECK# EQ 0
:    SET &UC4RB_LOGGING_ERROR# = "PLEASE PROVIDE ATLEAST ONE OF THESE PARAMETERS: RESOURCE POOL, CLUSTER, VAPP OR HOST NAME"
:    INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.ERROR
     $errors = 1
:ENDIF

!------------------------------------Prepare PowerCLI commandlet-----------------------------------------------------------------------------------------------
:IF &CHECK# <> 0
        try
        {
!            DECRYPT PASSWORD
:            INC PCK.ITPA_SHARED.PUB.INCLUDE.ATTACH
:            SET &UC4RB_ENCRYPTED_PASSWORD_TMP# = "&UC4RB_VSP_PASSWORD#"
:            INC PCK.ITPA_SHARED.PRV.INCLUDE.DECRYPT_PASSWORD

:            SET &UC4RB_LOGGING_INFO# =  "CONNECT CMD: &UC4RB_VSP_CONNECT_CMDLET#"
:            INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
             $vsp_srv_obj = &UC4RB_VSP_CONNECT_CMDLET# -Password $UC4_DECRYPTED_PWD -Force
             try
             {



!                      ------------------------------Forming New-VM cmdlet followed by execution of the command-------------------------------------------------------------------------
!                      Virtual Machine Name
:                      INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_VMNAME#

!                      New-VM cmdlet
                       $vsp_newvm_hashtable = @{}
                       $vsp_newvm_hashtable.add('Name', '&UC4RB_VSP_VSPHERE_ESC_VALUE#')

:                      IF &UC4RB_VSP_GUESTOS_ID# <> ""
:                                INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_GUESTOS_ID#
                                 $vsp_newvm_hashtable.add('GuestId', '&UC4RB_VSP_VSPHERE_ESC_VALUE#')
:                      ENDIF

!                      Datacenter
:                      INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_DATACENTER#
!                      Get the datacenter object
                       $vsp_datacenter = Get-Datacenter -Name '&UC4RB_VSP_VSPHERE_ESC_VALUE#'
                       if($vsp_datacenter.count -ne 1) {
                           throw "Datacenter retrieved. Expected 1, Found $($vsp_datacenter.count)"
                       }

!                      Destination folder
:                      IF &UC4RB_VSP_DEST_FOLDER# <> ""
:                                INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_DEST_FOLDER#
:                                SET &DEST_FOLDER# = &UC4RB_VSP_VSPHERE_ESC_VALUE#

!                                Get the folder object with datacenter and folder path
:                                INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.GET_FOLDER_BY_DATACENTER_AND_FOLDER_PATH
                                 $vsp_newvm_hashtable.add('Location', $folderObject)
:                      ENDIF


!                      VMHost/Target Place
:                      IF &UC4RB_VSP_VMHOST# <> ""
!                                VMHost
:                                INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_VMHOST#
                                 $vsp_vmhost = Get-VMhost -Name '&UC4RB_VSP_VSPHERE_ESC_VALUE#' -Location $vsp_datacenter
                                 if($vsp_vmhost.count -ne 1) {
                                    throw "VM Host retrieved. Expected 1 , Found $($vsp_vmhost.count)"
                                 }
                                 $vsp_newvm_hashtable.add('VMHost', $vsp_vmhost)
:                      ENDIF

!                      Target Place
:                      IF &UC4RB_VSP_TRGT_PLACE# NE "NONE"
:                          IF &UC4RB_VSP_PLACE# <> ""
!                                Target Place
:                                INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_PLACE#
:                                SWITCH &UC4RB_VSP_TRGT_PLACE#
:                                    CASE "RESOURCE POOL"
                                                $vsp_resourcepool = Get-ResourcePool -Name '&UC4RB_VSP_VSPHERE_ESC_VALUE#' -Location $vsp_datacenter
:                                    CASE "CLUSTER"
                                                $vsp_resourcepool = Get-Cluster -Name '&UC4RB_VSP_VSPHERE_ESC_VALUE#' -Location $vsp_datacenter
:                                    CASE "VAPP"
                                                $vsp_resourcepool = Get-VApp -Name '&UC4RB_VSP_VSPHERE_ESC_VALUE#' -Location $vsp_datacenter
:                                ENDSWITCH
                                 if($vsp_resourcepool.count -ne 1) {
                                     throw "Target place detected. Expected 1, Found $($vsp_resourcepool.count)"
                                 }
                                 $vsp_newvm_hashtable.add('ResourcePool', $vsp_resourcepool)
:                          ENDIF
:                      ENDIF


!                      Datastore
:                      IF &UC4RB_VSP_DATASTORE# <> ""
:                                INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_DATASTORE#
                                 $vsp_datastore = Get-Datastore -Name '&UC4RB_VSP_VSPHERE_ESC_VALUE#' -Location $vsp_datacenter
                                 if($vsp_datastore.count -ne 1) {
                                    throw "Datastore detected. Expected 1 , Found $($vsp_datastore.count)"
                                 }
                                 $vsp_newvm_hashtable.add('Datastore', $vsp_datastore)
:                      ENDIF

:                      IF &UC4RB_VSP_NETWORK# <> ""
:                          INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_NETWORK#
                           $vsp_network = '&UC4RB_VSP_VSPHERE_ESC_VALUE#'
                           $vsp_networklist = $vsp_network.Split(",")
                           $vsp_newvm_hashtable.add('NetworkName', $vsp_networklist)

:                      ENDIF

:                      IF &UC4RB_VSP_VM_MEMORY# <> ""
:                          INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_VM_MEMORY#
                           $vsp_newvm_hashtable.add('MemoryGB', '&UC4RB_VSP_VSPHERE_ESC_VALUE#')
:                      ENDIF

:                      IF &UC4RB_VSP_VM_DISKS# <> ""
:                          INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_VM_DISKS#
                           $vsp_disks = '&UC4RB_VSP_VSPHERE_ESC_VALUE#'
                           $vsp_disk_list = $vsp_disks.Split(",")
                           $vsp_newvm_hashtable.add('DiskGB', $vsp_disk_list)

:                      ENDIF

:                      IF &UC4RB_VSP_VM_CPU_NO# <> ""
:                                INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_VM_CPU_NO#
                                 $vsp_newvm_hashtable.add('NumCpu', '&UC4RB_VSP_VSPHERE_ESC_VALUE#')
:                      ENDIF

                       New-VM @vsp_newvm_hashtable
             } finally {
                     try {
!                              Disconnect from the server if connection is establish
:                              SET &UC4RB_LOGGING_INFO# =  "DISCONNECT CMD: &UC4RB_VSP_DISCONT_CMDLET#"
:                              INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
                               &UC4RB_VSP_DISCONT_CMDLET#
                     } catch {
                               Write-Host 'Unable to disconnect from the server.'
                               Write-Host 'INFO:' $($error[0].Exception.Message)
                     }
             }
      } catch {
             $errors = 1
             Write-Host 'ERROR:' $($error[0].Exception.Message)
      }

:ENDIF
!-----------------------------------Error Handling-------------------------------------------------------------------------------------
!Status messages
:SET &UC4RB_LOGGING_INFO# = "******** CREATE NEW VM ACTION EXECUTED SUCCESSFULLY ********"
:SET &UC4RB_LOGGING_ERROR# = "******** CREATE NEW VM ACTION FAILED ********"

:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.CHECK_ERRORSTATUS]]></process>
      </row>
      <row>
         <pre_process><![CDATA[:INC PCK.ITPA_SHARED.PUB.INCLUDE.START_STOP_JOB_ACCORDING_TO_AGENT_OS
:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.PREP_CONNECTION_CMDLETS]]></pre_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <platform>WINDOWS</platform>
         <agent><![CDATA[<WIN>]]></agent>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>2</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object></job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>
