<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>21.0.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>A</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <platform>WINDOWS</platform>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>PCK.AUTOMIC_VMWARE_VSPHERE.PRV.JOB.REMOVE_VM_QUIETLY@WINDOWS</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <description>Remove VM quietly</description>
         <versioning_id>2094960168</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.EXECUTION_ENVIRONMENT

!-------------------------------------Logging input parameters-------------------------------------------------------------------------------------------------
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.PARAM_VALIDATION
: INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.LOGGING_CONNECTION_DETAILS

: SET &UC4RB_LOGGING_PARAMETER# = "Virtual Machine name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_VMNAME#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

: SET &UC4RB_LOGGING_PARAMETER# = "Location"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_LOCATION#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

: SET &UC4RB_LOGGING_PARAMETER# = "Delete Permanently"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_DELETE_PERMANENTLY#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

: SET &UC4RB_LOGGING_PARAMETER# = "Folder path"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_FOLDER_PATH#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM


:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.EXECUTION
:INC PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN

!DECRYPT PASSWORD
: INC PCK.ITPA_SHARED.PUB.INCLUDE.ATTACH
: SET &UC4RB_ENCRYPTED_PASSWORD_TMP# = "&UC4RB_VSP_PASSWORD#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.DECRYPT_PASSWORD

!------------------------------------ Powershell script for the action -----------------------------------------------------------------------------------------
try
{
   WRITE-HOST "INFO: CONNECT CMD: &UC4RB_VSP_CONNECT_CMDLET#"

   $vsp_srv_obj = &UC4RB_VSP_CONNECT_CMDLET# -Password $UC4_DECRYPTED_PWD -Force

:  INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_VMNAME#
:  SET &CMDLET# = "Get-VM -Name '&UC4RB_VSP_VSPHERE_ESC_VALUE#'"

!  Location
:  IF &UC4RB_VSP_LOCATION# <> ""
:     INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_LOCATION#
:     SET &CMDLET# = STR_CAT(&CMDLET#, " -Location '&UC4RB_VSP_VSPHERE_ESC_VALUE#'")
:  ENDIF
   try{
     $vmlist = &CMDLET#
:    IF &UC4RB_VSP_FOLDER_PATH# <> ""
:       INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_FOLDER_PATH#
        $matchedvms = $vmlist | Where { validateFolderPath '&UC4RB_VSP_VSPHERE_ESC_VALUE#' $_.FolderId }
:    ELSE
        $matchedvms = $vmlist
:    ENDIF

     if($matchedvms.count -eq 0){
       write-host 'No VM exists for the specified user input(s)'
     } else{
       $onvmlist = $matchedvms | where{$_.PowerState -eq "PoweredOn"}
       if($onvmlist.count -ne 0){
         write-host 'VM is in POWEREDON state. Stop VM before removing'
         $onvmlist | Stop-VM -Confirm:$false
       }
:    IF &UC4RB_VSP_DELETE_PERMANENTLY# = 'YES'
        $matchedvms | REMOVE-VM -DeletePermanently -Confirm:$false
:    ELSE
        $matchedvms | REMOVE-VM -Confirm:$false
:    ENDIF
     }
   } catch {
      write-host 'No VM exists for the specified user input(s)'
   }

   finally
   {
           try {
!              Disconnect from the server if connection is establish
:              SET &UC4RB_LOGGING_INFO# =  "DISCONNECT CMD: &UC4RB_VSP_DISCONT_CMDLET#"
:              INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
             &UC4RB_VSP_DISCONT_CMDLET#
               }
         catch
         {
          Write-Host "Unable to disconnect from the server."
          Write-Host "INFO: $($error[0].Exception.Message)"
               }
    }
}
catch
{
   $errors = 1
   Write-Host "ERROR: $($error[0].Exception.Message)"
}

!-----------------------------------Error Handling------------------------------------------------------------------------------------------------------------
!Status messages
:SET &UC4RB_LOGGING_INFO# = "******** REMOVE VM QUIETLY ACTION EXECUTED SUCCESSFULLY ********"
:SET &UC4RB_LOGGING_ERROR# = "******** REMOVE VM QUIETLY ACTION FAILED ********"

:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.CHECK_ERRORSTATUS]]></process>
      </row>
      <row>
         <pre_process><![CDATA[:INC PCK.ITPA_SHARED.PUB.INCLUDE.START_STOP_JOB_ACCORDING_TO_AGENT_OS
:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.PREP_CONNECTION_CMDLETS]]></pre_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <platform>WINDOWS</platform>
         <agent><![CDATA[<WIN>]]></agent>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>2</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object></job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>
