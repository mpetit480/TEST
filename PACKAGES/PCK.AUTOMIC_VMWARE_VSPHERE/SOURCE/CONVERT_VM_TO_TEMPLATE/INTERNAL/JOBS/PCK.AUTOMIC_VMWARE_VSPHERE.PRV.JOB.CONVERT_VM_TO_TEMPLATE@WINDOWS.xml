<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>21.0.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>A</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <platform>WINDOWS</platform>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>PCK.AUTOMIC_VMWARE_VSPHERE.PRV.JOB.CONVERT_VM_TO_TEMPLATE@WINDOWS</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <description>Convert VM to Template</description>
         <versioning_id>-1394241358</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.EXECUTION_ENVIRONMENT

!-------------------------------------Logging input parameters-------------------------------------------------------------------------------------------------
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.PARAM_VALIDATION
: INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.LOGGING_CONNECTION_DETAILS

: SET &UC4RB_LOGGING_PARAMETER# = "Virtual Machine name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_VMNAME#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

: SET &UC4RB_LOGGING_PARAMETER# = "Location"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_LOCATION#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

: SET &UC4RB_LOGGING_PARAMETER# = "Folder path"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_FOLDER_PATH#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.EXECUTION
:INC PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN

!------------------------------------ Powershell script for the action --------------------------------------------------------------------------------
try
{
:  SET &UC4RB_LOGGING_INFO# =  "CONNECT CMD: &UC4RB_VSP_CONNECT_CMDLET#"
:  INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO

!  DECRYPT PASSWORD
:  INC PCK.ITPA_SHARED.PUB.INCLUDE.ATTACH
:  SET &UC4RB_ENCRYPTED_PASSWORD_TMP# = "&UC4RB_VSP_PASSWORD#"
:  INC PCK.ITPA_SHARED.PRV.INCLUDE.DECRYPT_PASSWORD

!  Executing Connect to vCenter cmdlets
   $vsp_srv_obj = &UC4RB_VSP_CONNECT_CMDLET# -Password $UC4_DECRYPTED_PWD -Force
   try
   {
!    ------------------------------------Prepare PowerCLI commandlet-----------------------------------------------------------------------------------
!    Building Get-VM cmdlet
:    SET &UC4RB_VSP_GETVM_CMDLET# = "Get-VM"

!    VMname
:    INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_VMNAME#
:    SET &UC4RB_VSP_GETVM_CMDLET# = STR_CAT(&UC4RB_VSP_GETVM_CMDLET#, " -Name '&UC4RB_VSP_VSPHERE_ESC_VALUE#'")

!    Location
:    IF &UC4RB_VSP_LOCATION# <> ""
:      INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_LOCATION#
:      SET &UC4RB_VSP_GETVM_CMDLET# = STR_CAT(&UC4RB_VSP_GETVM_CMDLET#, " -Location '&UC4RB_VSP_VSPHERE_ESC_VALUE#'")
:    ENDIF

!    Get the vm(s)
!    Folder Path
:    IF &UC4RB_VSP_FOLDER_PATH# <> ""
:      INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_FOLDER_PATH#
       $vm = &UC4RB_VSP_GETVM_CMDLET# | where { validateFolderPath '&UC4RB_VSP_VSPHERE_ESC_VALUE#' $_.FolderId }
:    ELSE
       $vm = &UC4RB_VSP_GETVM_CMDLET#
:    ENDIF
     if($vm.count -eq 0)
     {
            throw "No VM found as per the specified input parameters"
     }

!    filter out the vm(s) that are not in powered on state
     $vm_not_poweredon = $vm | where { $_.PowerState -ne "PoweredOn" }

!    check if total vm found and the filtered vm(not powered-on) are same.
     if ($vm.count -ne $vm_not_poweredon.count)
     {
            throw "Could not convert VM to Template as one or more VM(s) are already Poweredon"
     }
        Write-Host "Number of VM(s) converting to Template: $($vm.count)"
        Set-VM -VM $vm -ToTemplate -Confirm:$false
     }
   finally
   {
      try
      {
!        Disconnect from the server if connection is establish
:        SET &UC4RB_LOGGING_INFO# =  "DISCONNECT CMD: &UC4RB_VSP_DISCONT_CMDLET#"
:          INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
         &UC4RB_VSP_DISCONT_CMDLET#
      }
      catch
      {
         Write-Host 'Unable to disconnect from the server.'
         Write-Host 'INFO:' $($error[0].Exception.Message)
      }
   }
}
catch
{
   $errors = 1
   Write-Host 'ERROR:' $($error[0].Exception.Message)
}

!-----------------------------------Error Handling------------------------------------------------------------------------------------------------------------
!Status messages
:SET &UC4RB_LOGGING_INFO# = "******** CONVERT VM TO TEMPLATE ACTION EXECUTED SUCCESSFULLY ********"
:SET &UC4RB_LOGGING_ERROR# = "******** CONVERT VM TO TEMPLATE ACTION FAILED ********"

:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.CHECK_ERRORSTATUS]]></process>
      </row>
      <row>
         <pre_process><![CDATA[:INC PCK.ITPA_SHARED.PUB.INCLUDE.START_STOP_JOB_ACCORDING_TO_AGENT_OS

:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.PREP_CONNECTION_CMDLETS]]></pre_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <platform>WINDOWS</platform>
         <agent><![CDATA[<WIN>]]></agent>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>2</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object></job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>
