<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>21.0.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>A</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <platform>WINDOWS</platform>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>PCK.AUTOMIC_VMWARE_VSPHERE.PRV.JOB.NEW_VM_HOST_NETWORK_ADAPTER@WINDOWS</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <description>New Host Virtual NIC</description>
         <versioning_id>-1947512276</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.EXECUTION_ENVIRONMENT

!-------------------------------------Logging input parameters-------------------------------------------------------------------------------------------------
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.PARAM_VALIDATION

: INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.LOGGING_CONNECTION_DETAILS

: SET &UC4RB_LOGGING_PARAMETER# = "Datacenter name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_DATACENTER#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Host name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_VMHOST#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Virtual Switch name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_VIRTUAL_SWITCH#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Portgroup name"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_PORT_GROUP#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "IP"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_NIC_IP#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM
: SET &UC4RB_LOGGING_PARAMETER# = "Subnet Mask"
: SET &UC4RB_LOGGING_PARAMETER_VAL# = "&UC4RB_VSP_SUBNET_MASK#"
: INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM

:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.EXECUTION
:INC PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN

!------------------------------------  Validation of Parameters vmhost/location-----------------------------------------------------------------------------------------------

! Initialize the AE variable for error check
: SET &CHECK# = 0

:IF &UC4RB_VSP_NIC_IP# <> ""
:     SET &CHECK# = &CHECK# +1
:ENDIF

:IF &UC4RB_VSP_SUBNET_MASK# <> ""
:        SET &CHECK# = &CHECK# +1
:ENDIF

:IF &CHECK# EQ 1
:    SET &UC4RB_LOGGING_ERROR# = "EITHER PROVIDE BOTH IP and SUBNET MASK OR NONE OF THEM"
:    INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.ERROR
     $errors = 1

:ELSE
!       ------------------------------------- Prepare New-VMHostNetworkAdapter PowerCLI commandlet inputs ----------------------------------------------------------------------------------------------------------------------------
        try {
!               DECRYPT PASSWORD
:               INC PCK.ITPA_SHARED.PUB.INCLUDE.ATTACH
:               SET &UC4RB_ENCRYPTED_PASSWORD_TMP# = "&UC4RB_VSP_PASSWORD#"
:               INC PCK.ITPA_SHARED.PRV.INCLUDE.DECRYPT_PASSWORD

:               SET &UC4RB_LOGGING_INFO# =  "CONNECT CMD: &UC4RB_VSP_CONNECT_CMDLET#"
:               INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
                $vsp_srv_obj = &UC4RB_VSP_CONNECT_CMDLET# -Password $UC4_DECRYPTED_PWD -Force

                try {
!                         -----------------------Fetch the host and virtual switch------------------------------------------------------
:                         INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_DATACENTER#
:                         SET &DATACENTER# = &UC4RB_VSP_VSPHERE_ESC_VALUE#

:                         INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_VMHOST#
:                         SET &VMHOST# = &UC4RB_VSP_VSPHERE_ESC_VALUE#

:                         INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_VIRTUAL_SWITCH#

!                         Get virtual switch object
                          $vsp_vswitch = Get-Datacenter -Name '&DATACENTER#' | Get-VMHost -Name '&VMHOST#' | Get-VirtualSwitch -Name '&UC4RB_VSP_VSPHERE_ESC_VALUE#' -Standard
                          if($vsp_vswitch.count -ne 1) {
                             throw "Standard Virtual Switch has been retrieved. Expected 1, Found $($vsp_vswitch.count)"
                          }

!                         ----------------------New-VMHostNetworkAdapter cmdlet preparation and execution-------------------------------------------------------------
                          $vsp_new_nic = @{'VirtualSwitch' = $vsp_vswitch}

!                         Portgroup Name
:                         INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_PORT_GROUP#
                          $vsp_new_nic.add('PortGroup', '&UC4RB_VSP_VSPHERE_ESC_VALUE#')

!                         IP/Subnet-Mask
:                         IF &UC4RB_VSP_NIC_IP# <> ""
!                                  IP
:                                  INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_NIC_IP#
                                   $vsp_new_nic.add('IP', '&UC4RB_VSP_VSPHERE_ESC_VALUE#')

!                                  Subnet mask
:                                  INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.ESCAPE_ARG_VALUE &TEMP_OPTION_VALUE# = &UC4RB_VSP_SUBNET_MASK#
                                   $vsp_new_nic.add('SubnetMask', '&UC4RB_VSP_VSPHERE_ESC_VALUE#')
:                         ENDIF
                          $vsp_adapter_name = New-VMHostNetworkAdapter @vsp_new_nic -Confirm:$false
                          Write-Host 'UC4RB_VSP_NIC::= '$($vsp_adapter_name.Name)
                } finally {
                          try {
!                                 Disconnect from the server if connection is establish
:                                 SET &UC4RB_LOGGING_INFO# =  "DISCONNECT CMD: &UC4RB_VSP_DISCONT_CMDLET#"
:                                 INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.INFO
                                  &UC4RB_VSP_DISCONT_CMDLET#
                          } catch {
                                  Write-Host "Unable to disconnect from the server."
                                  Write-Host "INFO: $($error[0].Exception.Message)"
                          }
                }
        } catch {
                $errors = 1
                Write-Host "ERROR: $($error[0].Exception.Message)"
        }
:ENDIF
!-----------------------------------Error Handling-------------------------------------------------------------------------------------
!Status messages
:SET &UC4RB_LOGGING_INFO# = "******** NEW HOST NETWORK ADAPTER ACTION EXECUTED SUCCESSFULLY ********"
:SET &UC4RB_LOGGING_ERROR# = "******** NEW HOST NETWORK ADAPTER ACTION FAILED ********"

:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.CHECK_ERRORSTATUS]]></process>
      </row>
      <row>
         <pre_process><![CDATA[:INC PCK.ITPA_SHARED.PUB.INCLUDE.START_STOP_JOB_ACCORDING_TO_AGENT_OS
:INC PCK.AUTOMIC_VMWARE_VSPHERE.PUB.INCLUDE.PREP_CONNECTION_CMDLETS]]></pre_process>
      </row>
      <row>
         <post_process><![CDATA[!Publish the VM Host Network Adapter name
: SET &STATUS# = GET_UC_OBJECT_STATUS(,,"RETCODE")
: SET &UC4RB_VSP_NIC# = ""

: IF &STATUS# EQ 0
:   SET &HND# = PREP_PROCESS_REPORT("JOBS",, "REP","UC4RB_VSP*","COL=DELIMITER", 'DELIMITER=*::=*')
:   PROCESS &HND#
:     SET &KEY# = GET_PROCESS_LINE(&HND#,1)
:     SET &VALUE# = GET_PROCESS_LINE(&HND#,2)
:     IF &KEY# = "UC4RB_VSP_NIC"
:         SET &UC4RB_VSP_NIC# = STR_TRIM(&VALUE#)
:         TERM_PROCESS
:     ENDIF
:   ENDPROCESS
:   CLOSE_PROCESS &HND#
: ENDIF

: PUBLISH &UC4RB_VSP_NIC#,,"WORKFLOW"]]></post_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <platform>WINDOWS</platform>
         <agent><![CDATA[<WIN>]]></agent>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>2</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object></job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>
