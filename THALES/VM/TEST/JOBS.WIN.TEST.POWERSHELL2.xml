<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>21.0.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>F</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <deactivation_delay>2</deactivation_delay>
         <ert>1</ert>
         <platform>WINDOWS</platform>
         <last_runtimes>AQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAA==</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>JOBS.WIN.TEST.POWERSHELL2</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <versioning_id>1343923014</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[! insert these lines in your script to determine if an error occurred

!if( $LastExitCode -ne 0 )
!{ __uc_return $LastExitCode }
!@set retcode=%errorlevel%
!@if NOT %ERRORLEVEL% == 0 goto :retcode

:DEFINE &SIZE#,string
:DEFINE &FREE#, string
:PSET &LECTEUR#=C:
:PRINT DEBUT
:BEGIN_EXT_INT POWERSHELL
#Get-ChildItem C:\Temp > C:\Temp\test.txt
Get-ChildItem C:\Temp 
write-host "* * * * * * * * * *"
$a = get-date
$a.tostring("MM dd")
$month = $a.Month
$day = $a.day
$month
write-host "* * * * * * * * * *"
get-executionpolicy
write-host "* * * * * * * * * *"
$size = ([wmi]"\\localhost\root\cimv2:Win32_logicalDisk.DeviceID='&LECTEUR#'").Size
$free = ([wmi]"\\localhost\root\cimv2:Win32_logicalDisk.DeviceID='&LECTEUR#'").FreeSpace
:REGISTER_VARIABLE "SIZE#",$size
:REGISTER_VARIABLE "FREE#",$free
write-host "* * * * * * * * * *"
write-host "Size &LECTEUR# : $size"
write-host "free &LECTEUR# : $free"
write-host "* * * * * * * * * *"
$RC = $?
switch ($RC)
{
True { $EXIT_CODE = 0 }
False { $EXIT_CODE = 1 ; echo "Aborting script!" ; exit $EXIT_CODE }
default { $EXIT_CODE = 1 ; echo "Aborting Script!" ; exit $EXIT_CODE }
}
write-host "* * * * * * * * * *"
write-host  ("   Return Code: $RC " -f $RC)
write-host "* * * * * * * * * *"
:END_EXT_INT POWERSHELL


@set retcode=%errorlevel%
@if NOT %ERRORLEVEL% == 0 goto :retcode]]></process>
      </row>
      <row>
         <post_process><![CDATA[:PUBLISH  &SIZE#,,TASK
:PUBLISH  &FREE#,,TASK
:PRINT "*******************************"
:PRINT SIZE &LECTEUR#: &SIZE#
:PRINT FREE &LECTEUR#: &FREE#
:PRINT "*******************************"
:PRINT FIN]]></post_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <activation_at_runtime>1</activation_at_runtime>
         <platform>WINDOWS</platform>
         <agent>WIN01</agent>
         <login>LOGIN.WIN01</login>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>0</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object></job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>
