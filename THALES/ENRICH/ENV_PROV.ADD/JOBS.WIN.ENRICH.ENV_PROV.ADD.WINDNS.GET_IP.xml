<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>21.0.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>A</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <ert>40</ert>
         <platform>WINDOWS</platform>
         <last_runtimes>EwAAABIAAAAkAAAAEAAAACsAAAAuAAAAKwAAACsAAAAtAAAALgAAAC0AAAAuAAAALQAAAC4AAAAsAAAALAAAACsAAAA6AAAADgAAAA0AAAAOAAAAGAAAABsAAAAbAAAADgAAAA==</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>JOBS.WIN.ENRICH.ENV_PROV.ADD.WINDNS.GET_IP</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>{VARA.GLOBAL.ENV_PROV.ADD, QUEUE, 1}</queue>
         <versioning_id>-1591942772</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[

:SET &MY_USER#=GET_VAR(VARA.TECHNICAL.WINDNS,USER)
:SET &MY_PASSWORD#=GET_VAR(VARA.TECHNICAL.WINDNS,PASSWORD)
:SET &MY_WINDNSSERVER#=GET_VAR(VARA.TECHNICAL.WINDNS,WINDNSSERVER)
:SET &MY_ZONENAME#=GET_VAR(VARA.TECHNICAL.WINDNS,ZONENAME)
:SET &MY_DNSTOOLS#=GET_VAR(VARA.TECHNICAL.WINDNS,DNSTOOLS)

:SET &CLE#=&EF#_&ENTITE_KISS#
:SET &ENTITE_SITE#=GET_VAR(VARA.REFERENTIEL.KISS, &CLE#,3)
:SET &MY_RANGE#=GET_VAR(VARA.REFERENTIEL.DNS,&ENTITE_SITE#,2)

:print DEBUG1 &MY_RANGE#
:DEFINE &MY_RC#,string
! &NUMBER_CLIENT#   nombre d'IP a trouver

:DEFINE &STRINGS#, string,4
:FILL &STRINGS#[] = STR_SPLIT(&MY_RANGE#,";")
:SET &START#=&STRINGS#[1]
:FILL &STRINGS#[] = STR_SPLIT(&START#,".")
:SET &END#=&STRINGS#[1].&STRINGS#[2].&STRINGS#[3].254
:PRINT DEBUT RANGE &START#
:PRINT FIN RANGE &END#

:DEFINE &MY_RC#,string
:BEGIN_EXT_INT POWERSHELL
write-host "* * * * * * * * * *"
get-executionpolicy
write-host "* * * * * * * * * *"

# liste des IP deja reserve dans les zones du DNS
$Username = "&MY_USER#"
$Password = "&MY_PASSWORD#"
$count=&NUMBER_CLIENT#
Write-Host "DEBUG1 " + $Username
Write-Host "DEBUG2 " + $Password
$pass = ConvertTo-SecureString -AsPlainText $Password -Force
$Cred = New-Object System.Management.Automation.PSCredential -ArgumentList $Username,$pass

$global:Zones = @()
$Zones = @(Invoke-Command -ComputerName &MY_DNSTOOLS# {Get-DnsServerZone -ComputerName &MY_WINDNSSERVER#} -credential  $cred)

$global:array_dns = @()
$global:dns_record = @()
ForEach ($Zone in $Zones) {
  write-Host "DEBUG12: "+ $Zone.ZoneName
  $dns_record=@(Invoke-Command -ComputerName &MY_DNSTOOLS# {Get-DnsServerResourceRecord -ComputerName &MY_WINDNSSERVER# -ZoneName $args[0] -RRtype "A"
  } -credential  $cred -Args $Zone.ZoneName)
  ForEach ($aa in $dns_record) {
	write-Host "DEBUG13: " + $aa.RecordData.ipv4address
	$array_dns += $aa.RecordData.ipv4address
	}
}
Write-Host "DEBUG3 " + $array_dns

$i=0
$start="&START#"
$end="&END#"
Write-Host "DEBUG8 " + $start
Write-Host "DEBUG9 " + $end
 $ip1 = ([System.Net.IPAddress]$start).GetAddressBytes()
 [Array]::Reverse($ip1)
 $ip1 = ([System.Net.IPAddress]($ip1 -join '.')).Address
 $ip2 = ([System.Net.IPAddress]$end).GetAddressBytes()
 [Array]::Reverse($ip2)
 $ip2 = ([System.Net.IPAddress]($ip2 -join '.')).Address
 for ($x=$ip1; $x -le $ip2 -and $i++ -le $count; $x++) {
 $ip = ([System.Net.IPAddress]$x).GetAddressBytes()
 [Array]::Reverse($ip)
 #write-host "DEBUG1 " + $monip
 $monip=$ip -join '.'
 if ($array_dns -NotMatch $monip){
	
	$liste=$liste + " " +$monip
	}
 }
 write-host "DEBUG LISTE  " + $liste
:REGISTER_VARIABLE "LISTE_IP#",$liste
write-host "* * * * * * * * * *"
:END_EXT_INT POWERSHELL


]]></process>
      </row>
      <row>
         <post_process><![CDATA[:SET &RET# = STR_LTRIM(&LISTE_IP#)
:SET &LISTE_IP#=&RET#


:IF &LISTE_IP# <> ""
:  PRINT OK: WINDNS GET_IP
:  PSET &EXIT_KISS_OK#="&EXIT_KISS_OK#,WINDNS GET_IP OK &LISTE_IP#"
:  PUBLISH &LISTE_IP#,,"TOP"
:ELSE
:  PRINT KO: WINDNS GET_IP
:  PSET &EXIT_KISS_KO#="&EXIT_KISS_KO#,WINDNS GET_IP KO &LISTE_IP#"
:  MODIFY_STATE STATUS_TEXT = "KO: WINDNS GET_IP"
:  MODIFY_STATE RETCODE = 10
: ENDIF]]></post_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <activation_at_runtime>1</activation_at_runtime>
         <platform>WINDOWS</platform>
         <agent>{VARA.GLOBAL.ENV_PROV.ADD, AGENT, 1}</agent>
         <login>{VARA.GLOBAL.ENV_PROV.ADD, LOGIN, 1}</login>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>0</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object></job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>
